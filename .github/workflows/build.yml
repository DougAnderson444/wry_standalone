name: build artifacts
on: push

jobs:
  build-artifacs:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-2019]
    steps:
      - uses: actions/checkout@v2
      - name: install stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Log versions
        run: |
          rustc --version
          cargo --version
      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"
          architecture: x64
      - name: Remove unused versions of Python
        if: startsWith(matrix.os, 'windows')
        run: |-
          $env:PATH -split ";" |
            Where-Object { Test-Path "$_\python.exe" } |
            Select-Object -Skip 1 |
            ForEach-Object { Move-Item "$_" "$_.disabled" }
      - name: install webkit2gtk (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0
      - run: cargo build --release --locked --all-targets -vv
      - name: Pre-release (linux)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          cd target/release
          zip -r wry-x86_64-unknown-linux-gnu.zip wry
      - name: Pre-release (mac)
        if: matrix.platform == 'macos-latest'
        run: |
          cd target/release
          zip -r wry-x86_64-apple-darwin.zip wry
      - name: Pre-release (windows)
        if: matrix.platform == 'windows-2019'
        run: |
          Compress-Archive -CompressionLevel Optimal -Force -Path target/release/wry.exe -DestinationPath target/release/wry-x86_64-pc-windows-msvc.zip
      - uses: actions/upload-artifact@v2
        if: matrix.platform == 'ubuntu-latest'
        with:
          name: linux-artifacts
          path: ./target/release/wry
      - uses: actions/upload-artifact@v2
        if: matrix.platform == 'windows-2019'
        with:
          name: windows-artifacts
          path: ./target/release/wry.exe
      - uses: actions/upload-artifact@v2
        if: matrix.platform == 'macos-latest'
        with:
          name: macos-artifacts
          path: ./target/release/wry
      - name: Release for test
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "wry_standalone release"
          draft: true
          files: |
            ./target/release/wry-x86_64-apple-darwin.zip
            ./target/release/wry-x86_64-pc-windows-msvc.zip
            ./target/release/wry-x86_64-unknown-linux-gnu.zip